type Player {
    id : ID! # Mandatory field (!)
    name : String
    team : Team
}

enum Team {
    CSK
    MI
    GT
    DC
}

type Query {
    findAll: [Player]
    findOne(id: ID): Player

    getAllMoviesHandler: [Movie]
}

type Mutation {
    create(name: String, team: Team): Player
    update(id: ID, name: String, team: Team): Player
    delete(id: ID): Player

    addMovieHandler(movieInput : MovieInput): Movie
    updateMovieHandler(id : ID!,movieInput : MovieInput): Movie
    deleteMovieHandler(id : ID!): String
}

type Movie {
    id: ID!
    title: String!
    director: String!
    studio: String!
    releaseYear: Int!
    movieCast: [String]!
}

input MovieInput {
    title: String!
    director: String!
    studio: String!
    releaseYear: Int!
    movieCast: [String]!
}